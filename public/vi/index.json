[
{
	"uri": "//localhost:1313/vi/",
	"title": "Amazon S3",
	"tags": [],
	"description": "",
	"content": "Làm Việc Với Amazon S3 Tổng Quan Hướng dẫn này sẽ hướng dẫn bạn thiết lập một ứng dụng Spring Boot tích hợp với AWS S3 từ máy tính của bạn. Bạn sẽ học cách tạo một dự án Spring Boot mới, thêm các phụ thuộc AWS SDK, cấu hình thông tin đăng nhập AWS và thiết lập AWS SDK trong Spring Boot.\nNội Dung Giới Thiệu Chuẩn Bị Thiết Lập Ứng Dụng Triển Khai lên EC2 Dọn Dẹp Tài Nguyên "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Chào mừng bạn đến với workshop toàn diện về việc tích hợp AWS S3 với ứng dụng backend và triển khai nó trên một phiên bản Amazon EC2. Workshop này sẽ hướng dẫn bạn qua từng bước từ việc thiết lập cơ sở hạ tầng đám mây đến việc triển khai một ứng dụng hoàn chỉnh tương tác với các dịch vụ của AWS.\nDù bạn là một nhà phát triển backend với kinh nghiệm đang muốn mở rộng kỹ năng đám mây của mình hay là người mới bắt đầu làm quen với AWS, workshop này sẽ cung cấp cho bạn những kinh nghiệm thực tiễn và kiến thức hữu ích. Tôi sẽ bao quát mọi khía cạnh từ việc tạo và quản lý tài nguyên AWS đến việc tích hợp ứng dụng backend của bạn với S3, làm cho đây trở thành một hướng dẫn quan trọng cho bất kỳ ai muốn tận dụng AWS trong dự án của mình.\nKết thúc workshop, bạn sẽ có một cái nhìn toàn diện về cách sử dụng các dịch vụ AWS để xây dựng các ứng dụng có khả năng mở rộng, bảo mật và hiệu quả.\nAmazon EC2 - Amazon Elastic Compute Cloud Amazon EC2 là một phần quan trọng trong điện toán đám mây, cung cấp khả năng tính toán mở rộng trong đám mây. Nó cho phép bạn triển khai các máy chủ ảo, được gọi là instances, mà bạn có thể cấu hình với các hệ điều hành và phần mềm khác nhau để đáp ứng nhu cầu của bạn. Tính linh hoạt của EC2 làm cho nó trở thành lựa chọn lý tưởng cho việc lưu trữ ứng dụng web, chạy các hệ thống phân tán, hoặc thực hiện phân tích dữ liệu lớn.\nTrong workshop này, tôi sẽ tập trung vào việc sử dụng EC2 để lưu trữ ứng dụng backend của bạn. Bạn sẽ học cách khởi tạo một instance EC2, cấu hình nó cho ứng dụng của bạn, và tận dụng các tính năng tự động mở rộng và cân bằng tải để đảm bảo ứng dụng của bạn có thể mở rộng và đáng tin cậy.\nAmazon S3 - Amazon Simple Storage Service Amazon S3 là một trong những giải pháp lưu trữ đáng tin cậy và tiết kiệm nhất hiện nay. Nó cung cấp dịch vụ lưu trữ đối tượng có thể truy cập từ bất kỳ đâu trên thế giới, cho phép bạn lưu trữ và truy xuất bất kỳ lượng dữ liệu nào vào bất kỳ lúc nào. S3 được thiết kế với độ bền 99.999999999%, đảm bảo rằng dữ liệu của bạn luôn được bảo mật và sẵn sàng.\nTrong workshop này, tôi sẽ sử dụng S3 để quản lý và lưu trữ hình ảnh cho ứng dụng của bạn. Bạn sẽ học cách tạo một bucket S3, tải lên và truy xuất tệp, và quản lý quyền truy cập. Ngoài ra, tôi sẽ khám phá các tính năng như phiên bản S3, chính sách vòng đời, và các cài đặt bảo mật để giúp bạn quản lý dữ liệu hiệu quả hơn.\nAWS SDK - Bộ công cụ của bạn để làm việc với AWS AWS SDK là một bộ công cụ mạnh mẽ giúp đơn giản hóa việc tương tác với các dịch vụ AWS từ ứng dụng của bạn. Nó cung cấp các API và thư viện cho nhiều ngôn ngữ lập trình khác nhau, cho phép bạn thực hiện các tác vụ như tải tệp lên S3, khởi chạy các instance EC2, và quản lý tài nguyên AWS ngay từ mã của bạn.\nTrong workshop này, tôi sẽ sử dụng AWS SDK cho Java để tích hợp S3 vào ứng dụng backend của bạn. Điều này bao gồm việc thiết lập SDK, viết mã để tương tác với S3, và triển khai các tính năng như URL ký trước cho các tải lên an toàn. AWS SDK sẽ giúp bạn xây dựng các ứng dụng phức tạp và hỗ trợ đám mây một cách dễ dàng.\nAWS Secrets Manager AWS Secrets Manager là một dịch vụ giúp bạn quản lý và truy xuất các thông tin bảo mật như thông tin xác thực và khóa API một cách an toàn. Dịch vụ này giúp bạn tránh phải mã hóa các thông tin nhạy cảm trong ứng dụng, giảm rủi ro lộ thông tin và nâng cao bảo mật.\nTôi sẽ hướng dẫn bạn cách sử dụng Secrets Manager để lưu trữ và truy xuất các thông tin xác thực cần thiết để truy cập các dịch vụ AWS, chẳng hạn như các khóa để tương tác với S3. Bạn sẽ học cách tích hợp Secrets Manager với ứng dụng của bạn để truy cập thông tin bảo mật một cách an toàn, đảm bảo rằng ứng dụng của bạn tuân thủ các nguyên tắc bảo mật tốt nhất.\n"
},
{
	"uri": "//localhost:1313/vi/3-setup-application/3.1-setup-aws-secrets-manager/",
	"title": "Thiết Lập AWS Secrets Manager",
	"tags": [],
	"description": "",
	"content": "Hướng dẫn này sẽ hướng dẫn bạn cách thiết lập AWS Secrets Manager để quản lý các thông tin bí mật của ứng dụng của bạn.\nBước 1: Tạo Một Bí Mật Trong AWS Secrets Manager Nhấp vào Store a new secret. Chọn Other type of secrets. Nhập các cặp key-value sau cho thông tin đăng nhập AWS và tên bucket của bạn: Cung cấp một tên cho thông tin bảo mật của bạn (ví dụ: mySpringBootAppSecrets). { \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [ { \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34; : { \u0026#34;AWS\u0026#34; : \u0026#34;arn:aws:iam::017820676824:role/ec2-role-for-s3-and-secret-management\u0026#34; }, \u0026#34;Action\u0026#34; : \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;Resource\u0026#34; : \u0026#34;*\u0026#34; } ] } Nhấn Next. Đánh giá các chi tiết để tạo Secrets Manager. Nhấp vào nút Lưu sau khi xem xét. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "Chuẩn bị cơ sở hạ tầng cho tích hợp AWS S3",
	"content": "Chuẩn bị Trong phần này, chúng ta sẽ chuẩn bị cơ sở hạ tầng cần thiết trên AWS. Điều này bao gồm việc thiết lập một Virtual Private Cloud (VPC) và khởi chạy một EC2 Instance sẽ phục vụ như là máy chủ cho ứng dụng backend của chúng ta. Ngoài ra, chúng ta sẽ tạo một S3 Bucket để lưu trữ hình ảnh và cấu hình các IAM Role và người dùng cần thiết để bảo mật và quản lý quyền truy cập vào các tài nguyên này.\nNội dung 2.1 Tạo IAM Role Một IAM Role là cần thiết để cấp quyền cho EC2 Instance của bạn tương tác với các dịch vụ AWS khác, chẳng hạn như S3. Vai trò này sẽ được liên kết với EC2 Instance, cho phép nó tải lên, lấy và xóa các tệp trong S3 Bucket của bạn. Chúng ta sẽ tạo một vai trò với các chính sách cần thiết và gán nó cho EC2 Instance của chúng ta.\n2.2 Tạo IAM User Một IAM User sẽ được tạo để cho phép truy cập lập trình vào các dịch vụ AWS. Người dùng này sẽ có các quyền cụ thể giới hạn quyền truy cập chỉ vào các tài nguyên cần thiết cho hội thảo này, theo nguyên tắc tối thiểu quyền. Chúng ta sẽ tạo các khóa truy cập cho người dùng này, các khóa này sẽ được sử dụng trong ứng dụng backend để tương tác với các dịch vụ AWS một cách an toàn.\n2.3 Tạo EC2 Instance Tiếp theo, chúng ta sẽ khởi chạy một EC2 Instance để lưu trữ ứng dụng backend của chúng ta. Điều này bao gồm việc chọn Amazon Machine Image (AMI) phù hợp, cấu hình các nhóm bảo mật, và gán vai trò IAM mà chúng ta đã tạo trước đó. Chúng ta cũng sẽ cài đặt phần mềm cần thiết, chẳng hạn như Java và Spring Boot, để chạy ứng dụng của chúng ta.\n2.4 Tạo S3 Bucket Một S3 Bucket sẽ được tạo để lưu trữ các hình ảnh mà ứng dụng của chúng ta sẽ quản lý. Chúng ta sẽ cấu hình bucket với các quyền phù hợp, cho phép ứng dụng backend tải lên, lấy và xóa hình ảnh. Ngoài ra, chúng ta sẽ khám phá các tính năng nâng cao của S3, chẳng hạn như chính sách bucket, mã hóa và phiên bản, để đảm bảo dữ liệu của chúng ta được bảo mật và tuân thủ các phương pháp tốt nhất.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-create-ec2/",
	"title": "Tạo EC2 Instance",
	"tags": [],
	"description": "Hướng dẫn từng bước để tạo và cấu hình một EC2 instance trên AWS.",
	"content": "Tạo EC2 Instance Amazon EC2 (Elastic Compute Cloud) cho phép bạn chạy các máy chủ ảo trên đám mây. Hướng dẫn này sẽ hướng dẫn bạn qua các bước để khởi chạy và cấu hình một EC2 Instance.\nBước 1: Điều hướng đến Dịch vụ EC2 Trong AWS Management Console, tìm kiếm \u0026ldquo;EC2\u0026rdquo; trong thanh tìm kiếm hoặc điều hướng đến Services \u0026gt; EC2 để mở bảng điều khiển EC2. Bước 2: Khởi chạy một Instance Trong bảng điều khiển EC2, nhấp vào nút Launch Instance để bắt đầu quá trình tạo instance. Nhập tên cho EC2 Instance Bước 3: Chọn Amazon Machine Image (AMI) Chọn một AMI (Amazon Machine Image) cho instance của bạn. Image này cung cấp hệ điều hành và cấu hình phần mềm cho instance của bạn. Bạn có thể chọn từ nhiều loại AMI khác nhau, bao gồm Amazon Linux, Ubuntu, Windows, v.v. Tìm các AMI được đánh dấu là \u0026ldquo;Free Tier Eligible\u0026rdquo; để tận dụng các lợi ích của free Tier Eligible, cung cấp sử dụng giới hạn mà không tốn phí. Bước 4: Chọn Loại Instance Chọn loại instance phù hợp với yêu cầu của bạn. Các loại instance khác nhau về CPU, bộ nhớ, lưu trữ và networking. Đối với mục đích chung, bạn có thể chọn loại instance như t2.micro (đủ điều kiện cho lớp miễn phí). Tạo một cặp khóa mới hoặc sử dụng một cặp khóa hiện có. Cặp khóa này được sử dụng để kết nối an toàn với instance của bạn qua SSH. Bước 5: Cấu hình Instance Cấu hình chi tiết của instance, bao gồm số lượng instance, mạng và cài đặt subnet.\nĐặt thêm các tùy chọn nếu cần, chẳng hạn như vai trò IAM hoặc giám sát.\nBước 6: Thêm Lưu trữ Thêm các khối lưu trữ vào instance của bạn nếu cần. Cài đặt mặc định thường bao gồm một volume gốc. Bạn có thể gắn thêm các volume EBS (Elastic Block Store) nếu cần. Bước 8: Thêm Thẻ (Tùy chọn) Thêm thẻ vào instance của bạn để giúp tổ chức và quản lý nó. Các thẻ là các cặp khóa-giá trị có thể được sử dụng để theo dõi chi phí, tự động hóa và nhận diện. Bước 9: Xem lại và Khởi chạy Xem lại cấu hình instance của bạn để đảm bảo mọi thứ đều chính xác. Nhấp vào Launch để bắt đầu quá trình tạo instance. Bạn sẽ được yêu cầu chọn một cặp khóa hiện có hoặc tạo một cặp mới. Cặp khóa này được sử dụng để kết nối an toàn với instance của bạn qua SSH. Bước 11: Truy cập Instance của Bạn Khi instance đã được khởi chạy, quay lại bảng điều khiển EC2 và chọn Instances để xem instance mới của bạn.\nSử dụng địa chỉ IP công cộng hoặc tên DNS của instance để kết nối với nó.\nĐối với các instance Linux, kết nối bằng SSH: ssh -i \u0026quot;your-key.pem\u0026quot; ec2-user@your-instance-public-dns Đối với các instance Windows, sử dụng RDP (Remote Desktop Protocol) với các thông tin đăng nhập được cung cấp. Kết luận Bạn đã tạo và khởi chạy thành công một EC2 Instance. Bạn có thể cấu hình và sử dụng instance của mình theo nhu cầu cho ứng dụng hoặc các nhiệm vụ phát triển.\nĐể biết thêm chi tiết và cấu hình nâng cao, hãy tham khảo Tài liệu EC2 của AWS.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-create-iam-user/",
	"title": "Tạo Người dùng IAM",
	"tags": [],
	"description": "Các bước chi tiết để tạo một User IAM trong AWS.",
	"content": "Tạo Người dùng IAM Trong bước này, chúng ta sẽ tiến hành tạo một IAM Role. Trong IAM Role này, chính sách AmazonSSMManagedInstanceCore sẽ được gán, đây là chính sách cho phép máy chủ EC2 giao tiếp với Session Manager.\nBước 1: Truy cập Dịch vụ IAM Trong AWS Management Console, gõ \u0026ldquo;IAM\u0026rdquo; vào thanh tìm kiếm hoặc điều hướng đến Dịch vụ \u0026gt; IAM để mở bảng điều khiển IAM. Bước 2: Bắt đầu Tạo Người dùng Mới Trong bảng điều khiển IAM, chọn Users từ menu bên trái. Nhấp vào nút Add User để bắt đầu quy trình tạo User. Nhập tên User. Sau đó nhấp vào nút Tiếp theo Nhấp vào nút Create User "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createiamrole/",
	"title": "Tạo Role IAM",
	"tags": [],
	"description": "",
	"content": "Tạo Role IAM Trong phần này, tôi sẽ hướng dẫn bạn quy trình tạo một IAM (Identity and Access Management) role mà sẽ được sử dụng để cấp quyền cho EC2 của bạn để tương tác với AWS S3. Các IAM roles rất quan trọng để quản lý quyền truy cập vào các tài nguyên AWS một cách an toàn.\nBước 1: Đăng nhập vào AWS Management Console Truy cập AWS Management Console. Đăng nhập bằng thông tin tài khoản AWS của bạn. Bước 2: Điều hướng đến Service IAM Trong AWS Management Console, gõ \u0026ldquo;IAM\u0026rdquo; vào thanh tìm kiếm hoặc điều hướng đến Service \u0026gt; IAM để mở bảng điều khiển IAM. Bước 3: Tạo Role Mới Trong bảng điều khiển IAM, chọn Role từ menu bên trái. Nhấp vào nút Tạo role. Bước 4: Chọn Loại Đối tượng Tin cậy Chọn Service AWS làm loại đối tượng tin cậy. Đối với trường hợp sử dụng, chọn EC2. Điều này cho phép các EC2 đảm nhận role này. Bước 5: Gán Chính sách Nhấp vào nút Tiếp theo: Quyền. Trên trang quyền, bạn cần gán các chính sách cấp quyền truy cập S3. Bạn có thể chọn một chính sách hiện có như AmazonS3FullAccess hoặc tạo một chính sách tùy chỉnh nếu cần quyền truy cập cụ thể. AmazonS3FullAccess: Cấp quyền truy cập đầy đủ cho tất cả các bucket S3. Chính sách Tùy chỉnh: Nếu bạn muốn kiểm soát chi tiết, nhấp vào Tạo chính sách và định nghĩa quyền của bạn bằng cách sử dụng trình chỉnh sửa JSON hoặc trình chỉnh sửa trực quan. Bước 6: Xem lại và Đặt tên cho Role Nhấp vào nút Next: Tags để thêm thẻ cho role (tùy chọn). Nhấp vào nút Next: Review. Nhập tên cho role trong trường Role name. Ví dụ: EC2-S3-Role. Nhấp vào nút Create role để tạo role IAM. Bước 7: Gán Chính sách Sau khi tạo thành công role IAM, bạn có thể cần gán một chính sách inline để tùy chỉnh thêm quyền liên quan đến role. Chính sách inline là các chính sách được nhúng trực tiếp vào một role IAM, nhóm, hoặc người dùng. Bạn cần gán các chính sách cấp quyền truy cập S3 và Secrets Manager. Bạn có thể chọn các chính sách hiện có hoặc tạo một chính sách tùy chỉnh.\nAmazonS3FullAccess: Cấp quyền truy cập đầy đủ cho tất cả các bucket S3. SecretsManagerReadOnly: Cấp quyền truy cập chỉ đọc cho các bí mật trong Secrets Manager. Dưới đây là ví dụ về chính sách tùy chỉnh JSON cấp quyền cho các hành động cụ thể trên S3 và Secrets Manager: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;CombinedPermissions\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34; ], \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:secretsmanager:us-east-1:017820676824:secret:upload-image-to-s3-secret-8UsdOW\u0026#34;, \u0026#34;arn:aws:s3:::your-bucket-name\u0026#34;, \u0026#34;arn:aws:s3:::your-bucket-name/*\u0026#34; ] } ] } "
},
{
	"uri": "//localhost:1313/vi/3-setup-application/",
	"title": "Tạo kết nối đến máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo kết nối đến các máy chủ EC2 của chúng ta, nằm trong cả public và private subnet.\nNội dung 3.1. Tạo Kết nối đến máy chủ EC2 Public 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "//localhost:1313/vi/5-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click chọn cả 2 instance Public Linux Instance và Private Windows Instance. Click Instance state. Click Terminate instance, sau đó click Terminate để xác nhận. Truy cập giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click chọn SSM-Role. Click Delete, sau đó điền tên role SSM-Role và click Delete để xóa role. Click Users. Click chọn user Portfwd. Click Delete, sau đó điền tên user Portfwd và click Delete để xóa user. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ System Manager - Session Manager. Click tab Preferences. Click Edit. Kéo chuột xuống dưới. Tại mục S3 logging. Bỏ chọn Enable để tắt tính năng logging. Kéo chuột xuống dưới. Click Save. Truy cập giao diện quản trị dịch vụ S3 Click chọn S3 bucket chúng ta đã tạo cho bài thực hành. ( Ví dụ : lab-fcj-bucket-0001 ) Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. "
},
{
	"uri": "//localhost:1313/vi/4-deploy-to-ec2/",
	"title": "Deploy Application EC2",
	"tags": [],
	"description": "",
	"content": "Deploy Spring Boot Application to EC2 and Test API In this guide, you will learn how to deploy a Spring Boot application to an EC2 instance and test the API.\nBước 1: Khởi Tạo và Cấu Hình EC2 Instance 1.1 Khởi Tạo Một EC2 Instance 1.2 Kết Nối Với EC2 Instance Mở Terminal trên máy tính của bạn. Change Permissions key pair file: chmod 400 /path/to/your-key-pair.pem Kết Nối EC2 Instance: ssh -i /path/to/your-key-pair.pem ec2-user@your-ec2-public-dns Bước 2: Cài Đặt Môi Trường trên EC2 2.1 Cài Đặt Java và Maven Cài Đặt Java: sudo yum install java-11-openjdk -y Đối với Ubuntu, sử dụng: sudo apt-get update sudo apt-get install openjdk-11-jdk -y Cài Đặt Maven: sudo yum install maven -y Đối với Ubuntu, sử dụng: sudo apt-get install maven -y 2.2 Chuyển Ứng Dụng Spring Boot của Bạn Create a JAR File của ứng dụng Spring Boot của bạn: mvn clean package Chuyển Tệp JAR lên EC2 instance của bạn: scp -i /path/to/your-key-pair.pem /path/to/your-spring-boot-app.jar ec2-user@your-ec2-public-dns:/home/ec2-user/ Step 3: Chạy Ứng Dụng Spring Boot 3.1 Di Chuyển Đến Thư Mục Đăng nhập vào EC2 instance của bạn và di chuyển đến thư mục nơi bạn đã chuyển tệp JAR cd /home/ec2-user/ 3.2 Chạy Tệp JAR Chạy tệp JAR java -jar your-spring-boot-app.jar Bạn sẽ thấy các log cho biết rằng ứng dụng đã bắt đầu và đang listen trên port được chỉ định. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.4-create-s3-bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "Hướng dẫn từng bước để tạo và cấu hình một S3 bucket trong AWS.",
	"content": "Tạo S3 Bucket Amazon S3 (Simple Storage Service) là một dịch vụ lưu trữ có thể mở rộng cho phép bạn lưu trữ và truy xuất bất kỳ số lượng dữ liệu nào từ bất kỳ đâu. Hướng dẫn này sẽ dẫn bạn qua các bước để tạo và cấu hình một S3 bucket.\nBước 1: Điều hướng đến Dịch vụ S3 Trong AWS Management Console, tìm kiếm \u0026ldquo;S3\u0026rdquo; trong thanh tìm kiếm hoặc điều hướng đến Services \u0026gt; S3 để mở bảng điều khiển S3. Bước 2: Tạo một Bucket Mới Trong bảng điều khiển S3, nhấp vào nút Create bucket để bắt đầu quá trình tạo bucket.\nBước 3: Cấu hình Cài đặt Bucket Bucket Name: Nhập một tên duy nhất cho bucket của bạn. Tên bucket phải là duy nhất toàn cầu trên tất cả các vùng AWS.\nRegion: Chọn vùng AWS nơi bạn muốn tạo bucket. Hãy xem xét việc chọn một vùng gần với người dùng mục tiêu của bạn để giảm độ trễ.\nBước 4: Cấu hình Tùy chọn Bucket Object Ownership:\nChọn giữa ACLs disabled (khuyến nghị) hoặc ACLs enabled dựa trên trường hợp sử dụng của bạn. Việc vô hiệu hóa ACLs đơn giản hóa quyền truy cập bằng cách chỉ sử dụng chính sách bucket cho kiểm soát quyền truy cập. Block Public Access Settings:\nMặc định, Amazon S3 chặn quyền truy cập công khai vào bucket của bạn. Giữ cài đặt này bật để bảo vệ dữ liệu của bạn trừ khi bạn cần làm cho bucket của bạn có thể truy cập công khai. Bucket Versioning:\nBật phiên bản hóa để giữ nhiều phiên bản của một đối tượng trong cùng một bucket. Điều này hữu ích cho sao lưu và phục hồi dữ liệu. Tags:\nThêm thẻ vào bucket của bạn để tổ chức và quản lý nó hiệu quả hơn. Thẻ là các cặp khóa-giá trị có thể được sử dụng để theo dõi chi phí, tự động hóa và nhận diện. Default Encryption:\nBật mã hóa mặc định để tự động mã hóa tất cả các đối tượng lưu trữ trong bucket. Bạn có thể chọn giữa các khóa do AWS quản lý (SSE-S3) hoặc Dịch vụ Quản lý Khoá AWS (SSE-KMS) để mã hóa. Advanced Settings:\nCấu hình ghi nhật ký, khóa đối tượng và các cài đặt nâng cao khác nếu cần. Những tùy chọn này thường được sử dụng cho các trường hợp sử dụng đặc biệt hơn. Bước 5: Xem lại và Tạo Xem lại tất cả các cấu hình bạn đã thiết lập cho bucket để đảm bảo chúng đáp ứng yêu cầu của bạn.\nNhấp vào Create bucket để hoàn tất việc tạo.\n"
},
{
	"uri": "//localhost:1313/vi/3-setup-application/3.2-create-springboot-project/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]